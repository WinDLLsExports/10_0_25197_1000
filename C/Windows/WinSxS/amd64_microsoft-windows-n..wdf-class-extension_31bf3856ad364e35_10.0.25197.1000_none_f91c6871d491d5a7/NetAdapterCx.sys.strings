 A^_^
 A^A\_
 A_A^_
 A_A^_^]
 A_A^A\
 A_A^A\_^
 A_A^A]A\_
 FZ6{M
 http://www.microsoft.com/windows0
 Microsoft Corporation. All rights reserved.
 Operating System
 Owned by Client Driver (Packets) Owned by Client Driver (Packets)(Packets descriptors yet to drained by OS
 Windows
! (buffer + bufferLength > buffer)
! (buffer + length > buffer)
! bufferArray.resize(BufferCounts)
! context.CreatedQueueObject
! demux[demux.count() - 1]
! m_affinitizedQueues.resize(m_maxProcessorIndex - m_minProcessorIndex + 1)
! m_extensionName
! m_extensions.insertSorted(extension, sort)
! m_indirectionTable.resize(capabilities.NumberOfIndirectionTableEntries)
! m_laLookupTable
! m_layoutParseBuffer.resize(m_datapathCapabilities.NominalMtu)
! m_multicastAddressList.resize(addressCount)
! m_packetExtensions.append(wistd::move(extension))
! m_rxQueues.reserve(RxQueueCount)
! m_rxQueues.reserve(RxScaling->GetNumberOfQueues())
! m_rxScaling
! m_Table.resize( m_Table.count()+1)
! m_temporary.reserve(m_extensions.count() + 1)
! m_txDemux.reserve(AdapterInit->TxDemux.count())
! m_txQueues.reserve(TxQueueCount)
! m_vaLookupTable
! m_Vectors.resize( m_Vectors.count()+1)
! newApp
! queue
! queueControl
! QueueCreationContext.Extensions.append(*extension)
! Queues.resize(Queues.count() + 1)
! queues.resize(RxScaling->GetNumberOfQueues() - m_rxQueues.count())
! queues.resize(TxQueueCount - m_txQueues.count())
! resize(NdlCount)
! ring
! row.resize(Count)
! rxQueue
! rxQueues.resize(RxQueueCount)
! rxScaling
! translatedEntries.resize(m_indirectionTable.count())
! translatedEntries.resize(Parameters.NumberOfIndirectionTableEntries)
! translatedEntries.resize(parameters->NumberOfRssEntries)
! txQueues.resize(TxQueueCount)
! txScaling
!arpOffload
!blContext
!bufferManager
!checksumOffload
!dataBuffer
!DbgkLiveDumpAddSecondaryDataRoutine
!dot11Context
!gsoOffload
!InitContext->Extensions.append(extensionPrivate)
!m_allocator
!m_apps.append(wistd::unique_ptr<INxApp> { static_cast<INxApp *>(client) })
!m_bufferPool
!m_BuffersInUseFlag.Initialize(m_PoolSize)
!m_BuffersRef.resize(m_PoolSize)
!m_BufferVectorAllocator.get()
!m_driverState
!m_frameworkExecutionContext
!m_indirectionTable.resize(IndirectionTableCount)
!m_MdlStorage
!m_MemoryConstraints.append(*MemoryConstraints)
!m_NblPool
!m_NblStorage
!m_ndisMiniport
!m_ndisPnpPower
!m_offloadManager
!m_offloads.append(wistd::move(checksumOffload))
!m_offloads.append(wistd::move(gsoOffload))
!m_offloads.append(wistd::move(rscOffload))
!m_offloads.append(wistd::move(rxChecksumOffload))
!m_offloads.append(wistd::move(txChecksumOffload))
!m_oidList
!m_pGuidToOidMap
!m_powerPolicy
!m_registryPath
!miniport
!nsOffload
!offloadFacade
!pool
!resize(m_PoolSize)
!rscOffload
!rssProcessorInfo
!RTL_IS_POWER_OF_TWO(BufferPoolConfig->BufferAlignment)
!RTL_IS_POWER_OF_TWO(IndirectionTableCount)
!rxChecksumOffload
!tempInstanceNameBuffer
!This program cannot be run in DOS mode.
!tssDemux
!txChecksumOffload
!TxDemux.append(tssDemux)
!WIN_VERIFY(Extension->NonWdfStyleAlignment <= alignment)
!WIN_VERIFY(Extension->Size != 0)
!WIN_VERIFY(Extension->Size <= MAXIMUM_ALLOWED_EXTENSION_SIZE)
!WIN_VERIFY(RTL_IS_POWER_OF_TWO(Extension->NonWdfStyleAlignment))
!wnodeCopy
"Microsoft Window
"Owned by Client Driver (Fragments)"Owned by Client Driver (Fragments)*Fragments descriptors yet to drained by OS
#0X$*
%ws execution context #%lu for %wZ
(|$pL
(D$ @
(D$ f
(D$ H
(D$@H
(D$`H
(D$0f
(D$0H
(D$PH
(ndisGuid->Flags & fNDIS_GUID_TO_STATUS) == 0
)0q'wDr
)D$PH
)D$pH
* (Stable) or NetAdapterCx 2.4 (Stable).                  
* Actual function table count  : %u 
* and NetAdapterOffloadSetRxChecksumCapabilities instead.   
* deprecated. Use NetAdapterOffloadSetTxChecksumCapabilities
* Driver verifier should be enabled on both client and Cx
* Expected function table count: %u 
* If not, DV may report false violations while verifiying NDIS rules
* NetAdapterCx 1.%u (Preview) client detected.            
* NetAdapterCx 2 (Preview) client detected.               
* NetAdapterCx detected a function count mismatch. The driver 
* NetAdapterCx detected a verifier rule violation.       *
* NetAdapterOffloadSetChecksumCapabilities has been         
* NetOffloadIsChecksumIPv4Enabled has been deprecated.    
* NetOffloadIsChecksumTcpEnabled has been deprecated.     
* NetOffloadIsChecksumUdpEnabled has been deprecated.     
* NetOffloadIsRxChecksumIPv4Enabled instead.              
* NetOffloadIsRxChecksumTcpEnabled instead.               
* NetOffloadIsRxChecksumUdpEnabled instead.               
* Recompile your source code and target NetAdapterCx 2.%u.
* Recompile your source code and target NetAdapterCx 2.x  
* Use NetOffloadIsTxChecksumIPv4Enabled and               
* Use NetOffloadIsTxChecksumTcpEnabled and                
* Use NetOffloadIsTxChecksumUdpEnabled and                
* using this extension will not load until it is re-compiled 
* with the latest version of the extension's header and libs 
************************* 
*************************** 
**********************************************************
************************************************************
*IdleRestriction
*IPChecksumOffloadIPv4
*LsoV1IPv4
*LsoV2IPv4
*LsoV2IPv6
*NumRssQueues
*RscIPv4
*RscIPv6
*RscTimestamp
*TCPChecksumOffloadIPv4
*TCPChecksumOffloadIPv6
*UDPChecksumOffloadIPv4
*UDPChecksumOffloadIPv6
*UsoIPv4
*UsoIPv6
,7Y28+lcJrzRTgHDi+fpW4YyE71JrGtNL+b4Gy7k2NgA=0Z
,f93r
,H;F v
,M9T6Hu
.00cfg
.data
.data$brc
.fffffff
.gfids
.giats
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.kmdfclassbind$a
.kmdfclassbind$c
.kmdfclassbind$d
.kmdftypeinit$a
.kmdftypeinit$c
.pdata
.rdata
.rdata$brc
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.text
.text$mn
.text$mn$00
.text$mn$21
.xdata
:NAISH
;@8-wZ
;fD9#t
;fD9;t
;JxiT
;NAEIt
;w0t+H
;xuZH
?NAEIt
@8h0t$H
@8iHt
@8jpt&H
@8l$Xu
@8o t9H
@8x t)H
@A^_^
@A_A^_
@A_A^A\
@A_A^A]A\_^]
@USVWATAUAVAWH
@USVWATAVAWH
@USVWAVAWH
@USVWAVH
@UVWATAUAVAWH
[NxExecutionContext
[u\C]
\$ 9_
\$ E3
\$ H;
\$ UVWATAUAVAWH
\$@A+
\$@L;
\&]K]D^i^
\)];]1^
\/]X]
\Device\netadaptercx
\K]_]
\O^j^
\Registry\Machine\System\CurrentControlSet\Control\NetworkSetup2\Interfaces\{%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}\Kernel
\W^D_
\Y]y]9^Y^
] ^}^
]!^/^]_
]8tWE8y
]d^:_
]I^I_
]PQT%U
]U^:_
]xD8I
]Y^$_
^#_]_
^,M9n0
^0\0Z
^4_X_v_
_,8\$xL
__chkstk
_strnicmp
_vsnwprintf
` UAVAWH
`A_A^A]A\_^]
`fothk
`INIT
{ AVH
{h@8-
|$ A#G
|$ AVH
|$ E3
|$ fD
|$ UATAUAVAWH
|$ UAVAWH
|$ UH
|$(A^
|$(E3
|$(fD
|$@A_A^A]A\
|$8A_A^A\
|$8E3
|$PH;{
}Hf+EvL
}MO,BP
+M0#M
+N0#N
+O0#O
=diODt
=diOSt
040904B0
0A^_^
0A_A\_
0A_A^_
0A_A^A\
0A_A^A]
0A_A^A]A\_
0A_A^A]A\_^]
0XYZAXAY
1*!resize(MdlCount)
10.0.25197.1000
10.0.25197.1000 (WinBuild.160101.0800)
140528173333Z
220630175940Z
230915175940Z0p1
231093+4715690
290528174333Z0}1
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
4FBufferPoolConfig->Flag & NET_CLIENT_BUFFER_POOL_FLAGS_SERIALIZATION
5Microsoft Development Root Certificate Authority 20140
7fD9/t
8\$4u
8\$5u
8\$6t
8\$xt
8A_A^A]A\_^][
9(u"H
9?fI 
9GNxIt
A H;D$8u
A)C(I
A;@0u
A;F+L
A^_^[]
A^A\_
A_A\]
A_A\_^]
A_A^]
A_A^_
A_A^_^[]
A_A^_^]
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A]
A_A^A]_]
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
A+P0A
A+Q0A
A+Q0A#Q
A3@P%
A8CHtSH
A8HcI0H
A9@0t
A9@0u
A9@0u#
A9@0u0L
A9@0u4L
A9@0uEL
actualBufferOffset < BufferAlignmentOffset
actualBufferSize < BufferSize
AdapterNetLuid
AdapterStateTransitionEvent
AdapterStateTransitionFrom
AdapterStateTransitionTo
AdStH
AllowDmaHalBypass
App %lu - RX %zu
App %lu - TX %zu
AQAPRQPH
ASmDH
B.reloc
B.rsrc
B`fE+
BatlH
bGFIDS
BTH!B(H!B0!BH!BLH!BP
bufferLength % addressLength != 0
bufferLength < sizeof(ULONG)
BufferPoolConfig->BufferAlignment > PAGE_SIZE
BufferSize < sizeof(WNODE_TOO_SMALL)
bufferVector == nullptr
C D8j
C D8R
cbSourceString > USHORT_MAX
CompanyName
CoQuH
CPE8P
cT3Mk:V
cxbmH
cxDeviceInit == nullptr
CxDrH
CxDriverContext
D!d$ E
D!d$ E3
D!t$ E
D$ ;O
D$ E3
D$ fD
D$$fA
D$(BatlA
d$(E3
D$(E3
D$(fD
D$@E3
D$@I;@H
D$`t#
D$0D;
D$0E3
D$0H;
D$0H9A
D$4t#
D$8D*
d$DD8%
D$HNdCxH
D$HNxRx
D$KH;
D$pA+
D$pE3
D$pH;
D$XE3
D$xE3
D;@A#
D2@I#
D3kPM#
D7DD;
D8%@ 
D8@A#
D8{ th
D8{!tXH
D8{0t
D8BLu
D8BMu
D8c+t
D8c0t
D8RTu
D8S u
D8S!u
D9?t\Hc
D9@(s|3
D9C,t
DbgkWerCaptureLiveKernelDump
DbgPrintEx
DeferredDeleteContext
DeStD
DeviceBusAddress
DevicelessAdapterInterfaceGuid
DeviceStateTransitionEvent
DeviceStateTransitionFrom
DeviceStateTransitionTo
DmaBouncePolicy
DPnPH
DriverEntry failed 0x%x for driver %wZ
E;K0u
E8T/`t0I
ECtxH
EcUpdatePerfCounters
entries == nullptr
en-US
epA_A^A\_^[]
EtwRegister
EtwRegisterClassicProvider
EtwSetInformation
EtwUnregister
EtwWriteTransfer
ExAcquirePushLockExclusiveEx
ExAcquirePushLockSharedEx
ExAcquireRundownProtection
ExAcquireRundownProtectionCacheAware
ExAcquireRundownProtectionEx
ExAllocateCacheAwareRundownProtection
ExAllocateFromNPagedLookasideList
ExAllocatePool2
ExAllocatePoolWithTag
ExDeleteNPagedLookasideList
ExFreeCacheAwareRundownProtection
ExFreePool
ExFreePoolWithTag
ExFreeToNPagedLookasideList
ExInitializeNPagedLookasideList
ExInitializeRundownProtection
ExQueueWorkItem
ExReInitializeRundownProtection
ExReInitializeRundownProtectionCacheAware
ExReleasePushLockEx
ExReleasePushLockExclusiveEx
ExReleaseRundownProtection
ExReleaseRundownProtectionCacheAware
ExReleaseRundownProtectionEx
extensionType == MediaExtensionType::None
ExWaitForRundownProtectionRelease
ExWaitForRundownProtectionReleaseCacheAware
f D9~
f!~XH9>u
f;L$0t
f9,Au
f9iHt#H
f9QHt
fA;\$
fA+I(
fA9t$
fD9#t
fD9${u
fD9$Cu
fD9/t
fD9;t
fD9+t
fD9<{u
fD9<Cu
fD9aH
fD9aHt
fD9aHt"H
fD9iHt!H
fD9iHt"H
fD9iHt#H
fD9iHt/H
fD9qHt
fD9qHt)H
fE;\7DsVE3
fE;T4Ds
fffff
ffffff
fffffff
-fffffff
FHf;F
FileDescription
FileVersion
fogrp
FxGetNextClassBindInfo failed
FxGetNextObjectContextTypeInfo failed
FxStubBindClasses: ClientBindClass %p, WDF_CLASS_BIND_INFO 0x%p, class %S, returned status 0x%x
FxStubBindClasses: invalid driver image, the address of symbol __KMDF_CLASS_BIND_START 0x%p is greater than the address of symbol __KMDF_CLASS_BIND_END 0x%p, status 0x%x
FxStubBindClasses: VersionBindClass WDF_CLASS_BIND_INFO 0x%p, class %S, returned status 0x%x
FxStubInitTypes: invalid driver image, the address of symbol __KMDF_TYPE_INIT_START 0x%p is greater than the address of symbol __KMDF_TYPE_INIT_END 0x%p, status 0x%x
G D8c 
G D8R
G D8Z
G(H+l$@H;
GetNxDriverFromWdfDriver(Driver) != nullptr
ghttp://www.microsoft.com/pkiops/crl/Microsoft%20Development%20Root%20Certificate%20Authority%202014.crl0
GNxIH
H UVWATAUAVAWH
H!\$ D
H!|$ D
H!} D
H!>H!}
H!D$(
H!l$ D
H!T$ D
H!t$ D
H.data
H.idata
h.rdata
H;]gtQL
H;_`u
H;D$@u5M
H;Qhwx
H9(uOH
H9(uqH
H9\$8t
H9=~2
H9=A1
H9=F 
H9=H/
H9=X3
H9n0u
H9y@u
HA_A^A]A\_^][
hostvnic
HPAGE
I#I(A
I,u1A
I1D7@I
I3A@H#
I3D7@A
I9N0t=@
I9R@u
I9W u
IfType
IgnoreVerifierDebugBreak
ihttp://www.microsoft.com/pkiops/certs/Microsoft%20Development%20Root%20Certificate%20Authority%202014.crt0
imp_NetAdapterLightweightInitAllocate
imp_WppRecorderReplay
InternalName
IoAllocateWorkItem
IoBuildPartialMdl
IofCompleteRequest
IoFileObjectType
IoFreeWorkItem
IoGetDeviceNumaNode
IoQueueWorkItem
IoRegisterPlugPlayNotification
IoUnregisterPlugPlayNotificationEx
IoWMIDeviceObjectToProviderId
IoWMIRegistrationControl
IoWMIWriteEvent
IPD8Q
IsEmpty()
Iterations / Sec
Iterations Total
K D8I t
K(D8I t
K(fA+I
K(uWA
k2mUU&
KArrH
KArrI
KdRefreshDebuggerNotPresent
KeAcquireSpinLockRaiseToDpc
KeClearEvent
KeEnterCriticalRegion
KeFlushIoBuffers
KeGetCurrentIrql
KeGetCurrentProcessorNumberEx
KeInitializeEvent
KeInitializeMutex
KeInitializeSpinLock
KeLeaveCriticalRegion
KeLowerIrql
KeQueryMaximumProcessorCountEx
KeReadStateEvent
KeReleaseMutex
KeReleaseSpinLock
KeSetEvent
KeWaitForSingleObject
key == nullptr
KfRaiseIrql
KLoaderDereferenceModule
KLoaderQueryDispatchTable
KLoaderReferenceModule
KmdfLibrary
KPD8Q
KsplH
KsplL
L$ E;N
L$ E3
L$ fD
L$ SVWH
l$ VWATAVAWH
L$(E3
l$(fD
L$@!D$@L
L$@fD
L$@H3
L$`E3
L$`H3
L$0E3
L$0f9O
L$0H3
l$0L;
l$2E3
L$8E3
L$8H3
L$hH3
L$hHk
L$PH3
L$XE3
L$XeH
L$XH3
L:@H;
L+l$8H
L9%"B
L9=[@
L95_A
L9g u
L9n t
L9t$@uTH
L9t$PuTH
L9v(u
L9w u
LcO A
LegalCopyright
length < NDIS_SIZEOF_OFFLOAD_ENCAPSULATION_REVISION_1
length < NDIS_SIZEOF_OFFLOAD_PARAMETERS_REVISION_3
length < NDIS_SIZEOF_RECEIVE_SCALE_PARAMETERS_V2_REVISION_1
length < NDIS_SIZEOF_RSC_STATISTICS_REVISION_1
length < NDIS_SIZEOF_RSS_SET_INDIRECTION_ENTRIES_REVISION_1
length < NDIS_SIZEOF_STATISTICS_INFO_REVISION_1
Lhttp://www.microsoft.com/pkiops/crl/Microsoft%20Development%20PCA%202014.crl0j
Lower
m_MemoryConstraints.count() > 1
m_receiveFilterCapabilities.SupportedPacketFilters == 0
m_resetDiagnosticsBuffer == WDF_NO_HANDLE
M9e(uTH
mbbcx
MediaType
Microsoft
Microsoft Corporation
Microsoft Corporation1
Microsoft Corporation1>0<
Microsoft Corporation1'0%
Microsoft Development PCA 2014
Microsoft Development PCA 20140
Microsoft Windows0
Microsoft.Windows.Ndis.NetAdapterCx
Microsoft.Windows.Ndis.NetAdapterCx.Translator
minio\netcx\adapter\adapterpnppower.cpp
minio\netcx\adapter\devicepnppower.cpp
minio\netcx\adapter\idle\idlestatemachine.cpp
minio\netcx\adapter\idle\powerreferenceholder.cpp
minio\netcx\adapter\nxadapter.cpp
minio\netcx\adapter\nxexecutioncontextapi.cpp
minio\netcx\adapter\nxexecutioncontexttask.cpp
minio\netcx\adapter\nxqueue.cpp
minio\netcx\adapter\powerpolicy\nxidlerestrictions.cpp
minio\netcx\adapter\powerpolicy\nxpowerreference.cpp
MmBuildMdlForNonPagedPool
MmGetPhysicalAddress
MmGetSystemRoutineAddress
MmIsDriverVerifyingByAddress
MmMapLockedPagesSpecifyCache
MmSizeOfMdl
MmUnmapLockedPages
MOFDATA
ms_fragment_databuffer
ms_fragment_logicaladdress
ms_fragment_mdl
ms_fragment_returncontext
ms_fragment_virtualaddress
ms_packet_checksum
ms_packet_gso
ms_packet_hash
ms_packet_ieee8021q
ms_packet_lso
ms_packet_rsc
ms_packet_rsc_timestamp
ms_packet_wifiexemptionaction
NAEIH
NAInH
NAISH
NBL Pending / Iteration
NBL Pending / Iteration*Packets descriptors given to client driver
nblTH
NdCxH
NdCxI
NDIS.SYS
NDIS_MINIPORT_BLOCK_TYPE
NdisAdvanceNetBufferDataStart
NdisAdvanceNetBufferListDataStart
NdisAllocateFragmentNetBufferList
NdisAllocateNetBufferAndNetBufferList
NdisAllocateNetBufferListContext
NdisAllocateNetBufferListPool
NdisCloseConfiguration
NdisConvertNdisStatusToNtStatus
NdisConvertNtStatusToNdisStatus
NdisCopyReceiveNetBufferListInfo
NdisCopySendNetBufferListInfo
NdisFreeFragmentNetBufferList
NdisFreeNetBufferList
NdisFreeNetBufferListContext
NdisFreeNetBufferListPool
NdisGetDataBuffer
NdisGetRssProcessorInformation
NdisIfGetInterfaceIndexFromNetLuid
NdisLWMDeregisterMiniportDriver
NdisLWMInitializeNetworkInterface
NdisLWMRegisterMiniportDriver
NdisLWMStartNetworkInterface
NdisLWMUninitializeNetworkInterface
NdisMDeregisterMiniportDriver
NdisMIndicateReceiveNetBufferLists
NdisMIndicateStatusEx
NdisMOidRequestComplete
NdisMPauseComplete
NdisMRestartComplete
NdisMSendNetBufferListsComplete
NdisMSetMiniportAttributes
NdisOpenConfigurationEx
NdisOpenConfigurationKeyByName
NdisReadNetworkAddress
NdisRetreatNetBufferDataStart
NdisWdfAsyncPowerReferenceCompleteNotification
NdisWdfChangeSingleInstance
NdisWdfCloseIrpHandler
NdisWdfCreateIrpHandler
NdisWdfDeregisterCx
NdisWdfDeviceControlIrpHandler
NdisWdfDeviceInternalControlIrpHandler
NdisWdfExecuteMethod
NdisWdfGetAdapterContextFromAdapterHandle
NdisWdfGetGuidToOidMap
NdisWdfMiniportDataPathStart
NdisWdfMiniportDereference
NdisWdfMiniportSetPower
NdisWdfMiniportStarted
NdisWdfMiniportTryReference
NdisWdfNotifyWmiAdapterArrival
NdisWdfPnPAddDevice
NdisWdfPnpPowerEventHandler
NdisWdfQueryAllData
NdisWdfQuerySingleInstance
NdisWdfReadConfiguration
NdisWdfRegisterCx
NdisWdfRegisterMiniportDriver
NdisWriteConfiguration
NetAdapterCx
NetAdapterCx Queue Counter
NetAdapterCx Queue Counter Set.
NetAdapterCx Queue Counter"Total number of polling iterations
NetAdapterCx.pdb
NetAdapterCx.sys
NetAdapterInitAllocateCommon
NetAdapterMof
NETADAPTERMOF
NETEXECUTIONCONTEXT %p
NETIO.SYS
NetLuidIndex
NetpDataBufferPool
NetpQueue
Network Adapter Class Extension for WDF
Nhttp://www.microsoft.com/pkiops/certs/Microsoft%20Development%20PCA%202014.crt0
NmrClientAttachProvider
NmrDeregisterClient
NmrRegisterClient
NmrWaitForClientDeregisterComplete
NrxRH
ntoskrnl.exe
NtxTH
NWmiH
NxAdapter
NxAdapter::InitializePowerManagement
NxAdapterStateTransition
NxApH
NxApI
nxbmH
nxbpH
NxBufferQueue
NxConfiguration
NxDevice
NxDevice::CollectDiagnostics
NxDevice::Initialize
NxDevice::WritePowerStateChangeEvent
NxDeviceStateTransition
NxDmH
NxDriver
NxExecutionContextTask
NxExH
NxIRH
nxmaD
nxmaH
nxmaI
nxmvH
NxNrD
NxNrH
NxNtH
NxOfA
NxOfD
NxOfH
NxOfI
NxPEA
NxPEH
NxPLH
NxPLt
NxPLt"L
NxPLt#H
NxpRH
NxPwH
NxQueue
NxRBH
NxRBI
NxRxE
NxRxI
NxWmH
NxWmHk
NxwRH
NxWSH
NxWSt
NxWSt"L
NxWSt#H
O@+k8A
O5a8V2
ObfDereferenceObject
ObfReferenceObject
ObReferenceObjectByHandle
OPD8Q
OriginalFilename
Owned by OS (Fragments)
Owned by OS (Packets)
Owned by OS (Packets),Fragments descriptors given to client driver
p AWH
P PQP
p WAVAWH
P!Q\R'S;TzT
P!X!Z>[
P,QcQ
P0A+P
pA^_^[]
PA_A^A\_^
PA_A^A]A\_^]
pA_A^A]A\_^]
PA_A^A]A\_^]
pA_A^A]A\_^]
PacketFilter & ~(m_receiveFilterCapabilities.SupportedPacketFilters) && GetMediaType() != NdisMediumNative802_11
Packets Drained
Packets Drained / Iteration
Packets Posted
Packets Posted / Iteration
Parameters.HashInformation == 0
parameters->RssEntrySize != sizeof(NDIS_RSS_SET_INDIRECTION_ENTRY)
pbxnL
PcwAddInstance
PcwRegister
PcwUnregister
PISbS
PnPNH
PowerRequiredWorkItemContext
PpQ?R
ProductName
ProductVersion
PsGetVersion
pZ1C>1
q(@85
Q(QYQ
Q,RTStT
Q@RnRJS
Q+QVQgQ<S
Q<R3Z
Q=R?S
Q0A+Q
q0o0m
QcRAS-TiT
qFRTd<
QGTyX
QJR"SoS
QNT0X
QSRqR
QueryExtension(Extension.Name, Extension.Version, Extension.Type) != nullptr
R#S]T
R%XAX
'-R,Q'
r`f;K
R0RaRYT
R2SUS
R3S~S
Rate of NBL pending
Rate of packets drained
Rate of packets posted
Rate of polling iterations
Receive
Redmond1
resetDiagnosticsSize == 0U
rku*e
rOfA;[
RtlClearAllBitsEx
RtlClearBitEx
RtlCopyUnicodeString
RtlEqualUnicodeString
RtlInitializeBitMapEx
RtlInitUnicodeString
RtlSetBitEx
RtlUnicodeStringToInteger
RxPerfCountersIterationInterval
RxReportPerfCounters
RxThreadAffinity
RxThreadPriority
s AWH
S#VqV
S*UDUHWbW
S@U'V
s`fA9N
SetRxThreadAffinity
SetTxThreadAffinity
size != sizeof(m_hashSecretKey)
status
status != STATUS_OBJECT_TYPE_MISMATCH
STATUS_ACCESS_DENIED
STATUS_ALREADY_REGISTERED
STATUS_BUFFER_OVERFLOW
STATUS_BUFFER_TOO_SMALL
STATUS_DUPLICATE_NAME
STATUS_INSUFFICIENT_RESOURCES
STATUS_INTEGER_OVERFLOW
STATUS_INVALID_DEVICE_REQUEST
STATUS_INVALID_PARAMETER
STATUS_NOT_IMPLEMENTED
STATUS_NOT_SUPPORTED
STATUS_SUCCESS
STATUS_UNSUCCESSFUL
STATUS_WMI_INSTANCE_NOT_FOUND
StringFileInfo
SUVWATAUAVAWH
swprintf_s
T$ E3
t$ E3
t$ fE
t$ UWATAVAWH
t$ UWAUAVAWH
t$ UWAVH
t$ WATAUAVAWH
t$ WATAUAVAWM
t$ WAVAWH
t$ WH
t$(A#
T$(E3
t$(fD
T$@E3
T$@H;Q
t$HA_A^A]A\_
T$hE3
t$pL;
t)<;u
t,K94
T/@E8Q`t?A
T;U3V&W
T3\_^
targetAdapters.count() == 0
tBfD9
TeUsW
TKU!V
Total number of packets drained
Total number of packets posted
Translation
TrQuH
TrQuul
TxPerfCountersIterationInterval
TxReportPerfCounters
TxThreadAffinity
TxThreadPriority
TzU9V&W
u L+t$HE
u!D8{
U(U}U
u)@8y
u*@8{
u*@8y
u,@8{
u.@8{
u-@8{
u@D8%
u@H95
U@WkWpX
u\A9<$t
U}V'W
u+D8m
U0WaW}Wb]
UATAUAVAWH
UAVAWH
uCL9=
uEA9<$t
ufA99t
ugA9<$t
uiA9<$t
uIHcG
uKH9=
UL-`5P
UnVUW
uoA9<$t
uOH9=
UpdateIndirectionTableEntryStatus( parameters->NumberOfRssEntries, translatedEntries, entries)
uRichg
USVWAVH
uvA9<$t
UVWATAUAVAWH
UVWATAWH
UVWAVAWH
UWATAVAWH
UWAUAVAWH
UWAVH
UWAWH
UyVEW
V"WLW
v(L9=
V.qNDR
V<W,Z
V0T0R
V4H!D$`
VarFileInfo
vJY'b
VKW#X
VS_VERSION_INFO
VWATAVAWH
VWAVH
W E8P
Washington1
WATAUAVAWH
WATAVH
WATAWH
WAVAWH
wcscmp
wcsstr
WDFLDR.SYS
WdfLdrQueryInterface
WdfRegisterClassLibrary
WdfVersionBind
WdfVersionBindClass
WdfVersionUnbind
WdfVersionUnbindClass
wGtWI
WHXKY
WI_AreAllFlagsClear(Parameters.HashInformation, hashTypeMask)
WI_IsAnyFlagSet(Parameters.HashInformation, reservedHashFunction)
WI_IsFlagClear(Parameters.HashInformation, hashFunctionMask)
wificx
WmiQueryTraceInformation
WmiTraceMessage
WPD8Z
WppAutoLogStart
WppAutoLogStop
WppAutoLogTrace
WppRecorder.sys
WSNxQueueVerifier
x ATAUAVAWD
x ATAUAVAWE3
x ATAVAWD
x ATAVAWH
x AUAVAWH
x AVH
x AVL
x AWH
x UATAUAVAWH
x UATAWH
X,YUY
X/YqY
X[Y%ZO[
X5YyZ
XA_A^A]A\_^][
XiY+]
XIYvY
XNY\ZQ[M\
Xz[,\
y*L9=)8
Y,Zr[\\
y;H95
Y@Z1[_[
Y=[9\F]G^
y=L9=k9
y0w0u
y2L9=L:
y4H95`
Y8[]\P]
y9^b?<
yAL9=|8
YfYp\
yHH9=
yOH95
Z! demux.reserve(Configuration.Count)
Z(sTH
Z}*5f
ZK[>\
Zr\X]
ZW[|[
ZwClose
ZwOpenFile
ZwOpenKey
ZwQuerySystemInformation
ZwQueryValueKey
